// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	core "github.com/gustavooferreira/news-app-feeds-mgmt-service/pkg/core"
	mock "github.com/stretchr/testify/mock"
)

// Repository is an autogenerated mock type for the Repository type
type Repository struct {
	mock.Mock
}

// AddFeed provides a mock function with given fields: feed
func (_m *Repository) AddFeed(feed core.Feed) error {
	ret := _m.Called(feed)

	var r0 error
	if rf, ok := ret.Get(0).(func(core.Feed) error); ok {
		r0 = rf(feed)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// DeleteFeed provides a mock function with given fields: url
func (_m *Repository) DeleteFeed(url string) error {
	ret := _m.Called(url)

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(url)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetFeeds provides a mock function with given fields: fq
func (_m *Repository) GetFeeds(fq core.FeedQuery) (core.Feeds, error) {
	ret := _m.Called(fq)

	var r0 core.Feeds
	if rf, ok := ret.Get(0).(func(core.FeedQuery) core.Feeds); ok {
		r0 = rf(fq)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(core.Feeds)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(core.FeedQuery) error); ok {
		r1 = rf(fq)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SetFeedState provides a mock function with given fields: enabled
func (_m *Repository) SetFeedState(enabled bool) error {
	ret := _m.Called(enabled)

	var r0 error
	if rf, ok := ret.Get(0).(func(bool) error); ok {
		r0 = rf(enabled)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
